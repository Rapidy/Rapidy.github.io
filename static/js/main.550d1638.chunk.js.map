{"version":3,"sources":["components/Button/Button.jsx","img/times.svg","components/Popup/Checkbox.jsx","components/Popup/Popup.jsx","App.js","index.js"],"names":["Button","props","disabled","onClick","className","classNames","empty","red","children","Checkbox","useState","yearPostfix","setYearPostfix","useEffect","year","type","id","value","htmlFor","toLocaleString","Popup","isShowedCalculate","setShowCalculate","salary","setSalary","error","setError","errorMessage","setErrorMessage","list","setList","inputRef","useRef","current","setSelectionRange","length","onClose","src","timesIcon","alt","ref","invalid","onChange","e","moneyFormated","target","replace","style","currency","maximumFractionDigits","placeholder","required","salaryFormated","deduction","sum","max","prev","leftover","checkTax","Math","round","map","item","i","name","App","isShowedPopup","setShowedPopup","onTogglePopup","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.550d1638.chunk.js","sourcesContent":["import React from 'react';\r\nimport './button.sass';\r\nimport classNames from 'classnames';\r\n\r\nexport default function Button(props) {\r\n  return (\r\n    <button\r\n      disabled={props.disabled}\r\n      onClick={props.onClick}\r\n      className={classNames('btn', {\r\n        'btn--empty': props.empty && !props.disabled,\r\n        'btn--red': props.red && !props.disabled,\r\n      })}>\r\n      {props.children}\r\n    </button>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/times.beb7d290.svg\";","import React, { useEffect, useState } from 'react';\r\n\r\nexport default function Checkbox(props) {\r\n  const [yearPostfix, setYearPostfix] = useState('ый');\r\n\r\n  function checkYearPostfix() {\r\n    if (props.year === 2 || props.year === 6 || props.year === 7) {\r\n      setYearPostfix('ой');\r\n    } else if (props.year === 3) {\r\n      setYearPostfix('ий');\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    checkYearPostfix();\r\n  });\r\n\r\n  return (\r\n    <li className='popup-overlay-box-list__item'>\r\n      <input\r\n        className='popup-overlay-box-list__item__checkbox'\r\n        type='checkbox'\r\n        id={props.year}\r\n        value={props.children}\r\n      />\r\n      <label className='popup-overlay-box-list__item__label' htmlFor={props.year}>\r\n        {props.children.toLocaleString('ru-Ru')} рублей{' '}\r\n        <span>в {`${props.year}-${yearPostfix}`} год</span>\r\n      </label>\r\n    </li>\r\n  );\r\n}\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport './popup.sass';\r\n\r\nimport timesIcon from '../../img/times.svg';\r\nimport Button from '../Button/Button';\r\nimport Checkbox from './Checkbox';\r\nimport classNames from 'classnames';\r\n\r\nexport default function Popup(props) {\r\n  const [isShowedCalculate, setShowCalculate] = useState(false);\r\n  const [salary, setSalary] = useState('');\r\n  const [error, setError] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const [list, setList] = useState([]);\r\n\r\n  function onCalculate() {\r\n    const salaryFormated = salary.replace(/[^\\d]/g, '');\r\n\r\n    if (salaryFormated >= 12500) {\r\n      setShowCalculate(true);\r\n      checkTax(Math.round(salaryFormated * 12 * 0.13));\r\n\r\n      setError(false);\r\n      setErrorMessage('');\r\n    } else if (salaryFormated < 12500 && salary !== '') {\r\n      setError(true);\r\n      setErrorMessage('Вы ввели зарплату меньше 12 500');\r\n    } else {\r\n      setError(true);\r\n      setErrorMessage('Поле обязательно для заполнения');\r\n    }\r\n  }\r\n\r\n  function onClickAdd() {\r\n    if (!error) {\r\n      props.onClose();\r\n    }\r\n  }\r\n\r\n  const inputRef = useRef();\r\n\r\n  useEffect(() => {\r\n    inputRef.current.setSelectionRange(\r\n      inputRef.current.value.length - 2,\r\n      inputRef.current.value.length - 2,\r\n    );\r\n  }, [salary]);\r\n\r\n  function onChangeSalary(e) {\r\n    const moneyFormated = e.target.value.replace(/[^\\d]/g, '');\r\n    setSalary(\r\n      (+moneyFormated).toLocaleString('ru-RU', {\r\n        style: 'currency',\r\n        currency: 'RUB',\r\n        maximumFractionDigits: 0,\r\n      }),\r\n    );\r\n  }\r\n\r\n  function checkTax(deduction) {\r\n    let sum = deduction;\r\n    const max = 260000;\r\n\r\n    setList([]);\r\n\r\n    if (deduction >= max) {\r\n      setList([max]);\r\n    } else {\r\n      setList((prev) => [...prev, deduction]);\r\n    }\r\n\r\n    while (sum <= max) {\r\n      if (sum + deduction > max) {\r\n        const leftover = max - sum;\r\n        setList((prev) => [...prev, leftover]);\r\n        break;\r\n      } else {\r\n        sum += deduction;\r\n        setList((prev) => [...prev, deduction]);\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='popup'>\r\n      <div className='popup-overlay'>\r\n        <div className='popup-overlay-box'>\r\n          <button onClick={props.onClose} className='popup-overlay-box__close'>\r\n            <img src={timesIcon} alt='Кнопка закрытия окна' />\r\n          </button>\r\n\r\n          <h1 className='popup-overlay-box__title'>Налоговый вычет</h1>\r\n          <p className='popup-overlay-box__descr'>\r\n            Используйте налоговый вычет чтобы погасить ипотеку досрочно. Размер налогового\r\n            вычета составляет не более 13% от своего официального годового дохода.\r\n          </p>\r\n\r\n          <label className='popup-overlay-box__label' htmlFor='salary'>\r\n            Ваша зарплата в месяц\r\n          </label>\r\n          <input\r\n            ref={inputRef}\r\n            className={classNames('popup-overlay-box__input', {\r\n              invalid: error,\r\n            })}\r\n            onChange={onChangeSalary}\r\n            type='text'\r\n            id='salary'\r\n            placeholder='Введите данные'\r\n            value={salary}\r\n            required\r\n          />\r\n\r\n          {error && <span className='popup-overlay-box__error'>{errorMessage}</span>}\r\n\r\n          <button onClick={onCalculate} className='popup-overlay-box__calculate'>\r\n            Рассчитать\r\n          </button>\r\n\r\n          {isShowedCalculate && (\r\n            <ul className='popup-overlay-box-list'>\r\n              <h2 className='popup-overlay-box-list__title'>\r\n                Итого можете внести в качестве досрочных:\r\n              </h2>\r\n              {list.length &&\r\n                list.map((item, i) => (\r\n                  <Checkbox key={`${i}_${item}`} year={++i}>\r\n                    {item}\r\n                  </Checkbox>\r\n                ))}\r\n            </ul>\r\n          )}\r\n\r\n          <div className='popup-overlay-box-choice'>\r\n            <span className='popup-overlay-box-choice__title'>Что уменьшаем?</span>\r\n\r\n            <div className='popup-overlay-box-choice-buttons'>\r\n              <input\r\n                className='popup-overlay-box-choice-buttons__input'\r\n                type='radio'\r\n                id='payment'\r\n                name='choice'\r\n              />\r\n              <label\r\n                className='popup-overlay-box-choice-buttons__label'\r\n                htmlFor='payment'>\r\n                Платёж\r\n              </label>\r\n              <input\r\n                className='popup-overlay-box-choice-buttons__input'\r\n                type='radio'\r\n                id='period'\r\n                name='choice'\r\n              />\r\n              <label className='popup-overlay-box-choice-buttons__label' htmlFor='period'>\r\n                Срок\r\n              </label>\r\n            </div>\r\n          </div>\r\n\r\n          <Button onClick={onClickAdd} red>\r\n            Добавить\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { useState } from 'react';\r\nimport './app.sass';\r\n\r\nimport Button from './components/Button/Button';\r\nimport Popup from './components/Popup/Popup';\r\n\r\nfunction App() {\r\n  const [isShowedPopup, setShowedPopup] = useState(false);\r\n\r\n  function onTogglePopup() {\r\n    setShowedPopup((prev) => !prev);\r\n  }\r\n\r\n  return (\r\n    <main className='main'>\r\n      <Button empty onClick={onTogglePopup}>\r\n        Налоговый вычет\r\n      </Button>\r\n\r\n      {isShowedPopup && <Popup onClose={onTogglePopup} />}\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.sass';\r\n\r\nReactDOM.render(\r\n  // <React.StrictMode>\r\n  <App />,\r\n  // </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}