{"version":3,"sources":["redux/actions/atmActions.js","components/Keyboard/Keyboard.jsx","components/Modes/Modes.jsx","components/Monitor/Monitor.jsx","App.js","redux/reducers/atmReducer.js","redux/store.js","index.js"],"names":["inputNumber","number","type","payload","Keyboard","dispatch","useDispatch","digits","addNumber","e","target","innerText","withdrawMoney","useEffect","document","body","addEventListener","includes","key","className","onClick","disabled","Modes","useState","activeMode","setActiveMode","modesRef","useRef","current","stopImmediatePropagation","availableModes","Object","values","amount","map","mode","i","setMode","localStorage","setItem","changeMode","ref","Monitor","numbers","useSelector","state","bills","leftover","withdrawedMoney","value","length","readOnly","bill","App","initialState","result","store","createStore","action","slice","newState","push","composeWithDevTools","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.8e68a42c.chunk.js","sourcesContent":["export const inputNumber = (number) => ({\r\n  type: 'ADD_NUMBER',\r\n  payload: number,\r\n});\r\n\r\nexport const removeNumber = () => ({\r\n  type: 'REMOVE_NUMBER',\r\n});\r\n\r\nexport const clearInput = () => ({\r\n  type: 'CLEAR_NUMBERS',\r\n});\r\n\r\nexport const withdraw = () => ({\r\n  type: 'WITHDRAW',\r\n});\r\n\r\nexport const setMode = (mode) => ({\r\n  type: 'SET_MODE',\r\n  payload: mode,\r\n});\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport {\r\n  inputNumber,\r\n  clearInput,\r\n  withdraw,\r\n  removeNumber,\r\n} from '../../redux/actions/atmActions';\r\nimport './keyboard.sass';\r\n\r\nexport default function Keyboard() {\r\n  const dispatch = useDispatch();\r\n\r\n  const digits = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '0'];\r\n\r\n  function addNumber(e) {\r\n    dispatch(inputNumber(e.target.innerText));\r\n  }\r\n\r\n  function clearNumbers() {\r\n    dispatch(clearInput());\r\n  }\r\n\r\n  function withdrawMoney() {\r\n    dispatch(withdraw());\r\n    dispatch(clearInput());\r\n  }\r\n\r\n  function deleteNumber() {\r\n    dispatch(removeNumber());\r\n  }\r\n\r\n  useEffect(() => {\r\n    document.body.addEventListener('keypress', function (e) {\r\n      if (digits.includes(e.key)) {\r\n        dispatch(inputNumber(e.key));\r\n      } else if (e.key === 'Enter' || e.key === 'NumpadEnter') {\r\n        withdrawMoney();\r\n      } else {\r\n        return false;\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <section className='keyboard'>\r\n      <div className='keyboard-digits'>\r\n        <button onClick={addNumber} className='keyboard__btn keyboard-digits__btn'>\r\n          1\r\n        </button>\r\n        <button onClick={addNumber} className='keyboard__btn keyboard-digits__btn'>\r\n          2\r\n        </button>\r\n        <button onClick={addNumber} className='keyboard__btn keyboard-digits__btn'>\r\n          3\r\n        </button>\r\n        <button onClick={addNumber} className='keyboard__btn keyboard-digits__btn'>\r\n          4\r\n        </button>\r\n        <button onClick={addNumber} className='keyboard__btn keyboard-digits__btn'>\r\n          5\r\n        </button>\r\n        <button onClick={addNumber} className='keyboard__btn keyboard-digits__btn'>\r\n          6\r\n        </button>\r\n        <button onClick={addNumber} className='keyboard__btn keyboard-digits__btn'>\r\n          7\r\n        </button>\r\n        <button onClick={addNumber} className='keyboard__btn keyboard-digits__btn'>\r\n          8\r\n        </button>\r\n        <button onClick={addNumber} className='keyboard__btn keyboard-digits__btn'>\r\n          9\r\n        </button>\r\n        <button\r\n          onClick={addNumber}\r\n          className='keyboard__btn keyboard-digits__btn'\r\n          disabled>\r\n          –\r\n        </button>\r\n        <button onClick={addNumber} className='keyboard__btn keyboard-digits__btn'>\r\n          0\r\n        </button>\r\n        <button className='keyboard__btn keyboard-digits__btn' disabled>\r\n          +\r\n        </button>\r\n      </div>\r\n\r\n      <div className='keyboard-functions'>\r\n        <button onClick={clearNumbers} className='keyboard__btn keyboard-functions__btn'>\r\n          <span></span>Очистить\r\n        </button>\r\n        <button onClick={deleteNumber} className='keyboard__btn keyboard-functions__btn'>\r\n          <span></span>Стереть\r\n        </button>\r\n        <button onClick={withdrawMoney} className='keyboard__btn keyboard-functions__btn'>\r\n          <span></span>Выдача\r\n        </button>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport './modes.sass';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setMode } from '../../redux/actions/atmActions';\r\n\r\nexport default function Modes() {\r\n  const modes = {\r\n    1: [\r\n      { number: 5000, amount: 100 },\r\n      { number: 2000, amount: 400 },\r\n      { number: 1000, amount: 1000 },\r\n      { number: 500, amount: 3000 },\r\n      { number: 200, amount: 5000 },\r\n      { number: 100, amount: 8000 },\r\n      { number: 50, amount: 10000 },\r\n    ],\r\n    2: [\r\n      { number: 5000, amount: 476 },\r\n      { number: 2000, amount: 345 },\r\n      { number: 1000, amount: 6741 },\r\n      { number: 500, amount: 4362 },\r\n      { number: 200, amount: 234 },\r\n      { number: 100, amount: 1643 },\r\n      { number: 50, amount: 3450 },\r\n    ],\r\n    3: [\r\n      { number: 5000, amount: 234 },\r\n      { number: 2000, amount: 678 },\r\n      { number: 1000, amount: 845 },\r\n      { number: 500, amount: 2451 },\r\n      { number: 200, amount: 9654 },\r\n      { number: 100, amount: 2345 },\r\n      { number: 50, amount: 234 },\r\n    ],\r\n    4: [\r\n      { number: 5000, amount: 546 },\r\n      { number: 2000, amount: 562 },\r\n      { number: 1000, amount: 2543 },\r\n      { number: 500, amount: 4365 },\r\n      { number: 200, amount: 2154 },\r\n      { number: 100, amount: 124 },\r\n      { number: 50, amount: 342 },\r\n    ],\r\n    5: [\r\n      { number: 5000, amount: 2732 },\r\n      { number: 2000, amount: 347 },\r\n      { number: 1000, amount: 479 },\r\n      { number: 500, amount: 7556 },\r\n      { number: 200, amount: 3296 },\r\n      { number: 100, amount: 1257 },\r\n      { number: 50, amount: 3854 },\r\n    ],\r\n    6: [\r\n      { number: 5000, amount: 73 },\r\n      { number: 2000, amount: 147 },\r\n      { number: 1000, amount: 279 },\r\n      { number: 500, amount: 356 },\r\n      { number: 200, amount: 696 },\r\n      { number: 100, amount: 857 },\r\n      { number: 50, amount: 854 },\r\n    ],\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n  const [activeMode, setActiveMode] = useState(0);\r\n  const modesRef = useRef();\r\n\r\n  useEffect(() => {\r\n    modesRef.current.addEventListener('keypress', function (e) {\r\n      e.stopImmediatePropagation();\r\n    });\r\n  }, []);\r\n\r\n  const availableModes = Object.values(modes).map((mode, i) => {\r\n    return (\r\n      <button\r\n        key={i}\r\n        className={`modes__btn ${i === activeMode ? 'active' : ''}`}\r\n        onClick={(e) => changeMode(mode, i)}>\r\n        {i + 1} вариант\r\n      </button>\r\n    );\r\n  });\r\n\r\n  function changeMode(mode, i) {\r\n    dispatch(setMode(mode));\r\n    localStorage.setItem('mode', i);\r\n    setActiveMode(i);\r\n  }\r\n\r\n  return (\r\n    <div ref={modesRef} className='modes'>\r\n      {availableModes}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport './monitor.sass';\r\n\r\nexport default function Monitor() {\r\n  const numbers = useSelector((state) => state.numbers);\r\n  const bills = useSelector((state) => state.bills);\r\n  const leftover = useSelector((state) => state.leftover);\r\n  const withdrawedMoney = useSelector((state) => state.withdrawedMoney);\r\n\r\n  return (\r\n    <section className='monitor'>\r\n      <div className='monitor-container'>\r\n        <div className='monitor-container-numbers'>\r\n          Введенная сумма:\r\n          <input\r\n            className='monitor-container-numbers__input'\r\n            value={numbers.length ? numbers : 0}\r\n            readOnly\r\n          />\r\n        </div>\r\n\r\n        <div className='monitor-container-info'>\r\n          Состояние купюр:\r\n          {bills.map((bill, i) => (\r\n            <li key={i} className='monitor-container-info__item'>\r\n              <b>{bill.number}</b> ({bill.amount} шт)\r\n            </li>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      <div className='monitor-container'>\r\n        <div className='monitor-container__item'>\r\n          Вы вывели денег на сумму: <b>{withdrawedMoney}</b>\r\n        </div>\r\n        <div className='monitor-container__item'>\r\n          Остаток от снятия <b>{leftover}</b>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n","import './App.sass';\nimport Keyboard from './components/Keyboard/Keyboard';\nimport Modes from './components/Modes/Modes';\nimport Monitor from './components/Monitor/Monitor';\n\nfunction App() {\n  return (\n    <main className='main'>\n      <div className='main-container'>\n        <Monitor />\n        <div className='main-container-bottom'>\n          <Keyboard />\n          <Modes />\n        </div>\n      </div>\n    </main>\n  );\n}\n\nexport default App;\n","const initialState = {\r\n  numbers: '',\r\n  bills: [\r\n    { number: 5000, amount: 100 },\r\n    { number: 2000, amount: 400 },\r\n    { number: 1000, amount: 1000 },\r\n    { number: 500, amount: 3000 },\r\n    { number: 200, amount: 5000 },\r\n    { number: 100, amount: 8000 },\r\n    { number: 50, amount: 10000 },\r\n  ],\r\n  result: [],\r\n  leftover: 0,\r\n  withdrawedMoney: 0,\r\n};\r\n\r\nexport default function atmRecuder(state = initialState, action) {\r\n  switch (action.type) {\r\n    case 'SET_MODE':\r\n      return {\r\n        numbers: '',\r\n        bills: action.payload,\r\n        result: [],\r\n        leftover: null,\r\n        withdrawedMoney: 0,\r\n      };\r\n\r\n    case 'ADD_NUMBER':\r\n      return {\r\n        ...state,\r\n        numbers: state.numbers + action.payload,\r\n      };\r\n\r\n    case 'REMOVE_NUMBER':\r\n      return {\r\n        ...state,\r\n        numbers: state.numbers.slice(0, -1),\r\n      };\r\n\r\n    case 'CLEAR_NUMBERS':\r\n      return {\r\n        ...state,\r\n        numbers: '',\r\n      };\r\n\r\n    case 'WITHDRAW': {\r\n      const newState = {\r\n        numbers: state.numbers,\r\n        bills: state.bills,\r\n        result: [],\r\n      };\r\n\r\n      if (newState.numbers > 0) {\r\n        for (let i = 0; i < newState.bills.length; i++) {\r\n          while (newState.numbers - newState.bills[i].number >= 0) {\r\n            if (newState.bills[i].amount === 0) {\r\n              break;\r\n            } else {\r\n              newState.numbers -= newState.bills[i].number;\r\n              newState.result.push(newState.bills[i].number);\r\n              newState.bills[i].amount -= 1;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        leftover: newState.numbers,\r\n        bills: newState.bills,\r\n        result: newState.result,\r\n        withdrawedMoney: state.numbers - newState.numbers,\r\n      };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { createStore } from 'redux';\r\nimport atmRecuder from './reducers/atmReducer';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nconst store = createStore(atmRecuder, composeWithDevTools());\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  // <React.StrictMode>\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  // </React.StrictMode>\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}